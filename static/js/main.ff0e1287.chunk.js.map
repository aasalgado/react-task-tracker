{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onToggle","showAdd","location","useLocation","pathname","Task","task","onDelete","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setshowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","taskToToggle","updateTask","headers","body","JSON","stringify","addTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff0e1287.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button \n            onClick={onClick}\n            style={{ backgroundColor: color }} className=\"btn\">\n            { text }\n            </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\nconst Header = ({title, onToggle, showAdd}) => {\n   const location = useLocation()\n\n    return (\n        <header className=\"header\">\n            <h1>{ title }</h1>\n        {location.pathname === '/' && \n            <Button color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"Close\" : \"Add\"}  onClick={onToggle}/>}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}` } onDoubleClick={() => onToggle(task.id)}>\n             <h3>\n                {task.text} \n                <FaTimes onClick={() => onDelete(task.id)} style={{color: 'red', cursor: 'pointer'}}/>\n            </h3>\n             <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map( (task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e)=> setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e)=> setDay(e.target.value)}></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} placeholder=\"Add Task\" value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}></input>\n            </div>\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"></input>\n        </form>\n    )\n}\n\nexport default AddTask\n","import  { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\nconst Footer = () => {\n    const location = useLocation()\n\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            {location.pathname !== '/about' && <Link to='/about'>About</Link>}\n        </footer>\n    )\n}\n\nexport default Footer\n","import  { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setshowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer);\n    }\n\n    getTasks()\n  }, [])\n\n  const baseUrl = 'https://my-json-server.typicode.com/aasalgado/react-task-tracker-server/tasks'\n\n  const fetchTasks = async () => {\n    const res = await fetch(baseUrl)\n    const data = await res.json()\n\n    return data;\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data;\n  }\n\n  const deleteTask = async (id) => {\n    await fetch (`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n      })\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  const onToggle = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(updateTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task))\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json();\n\n    setTasks([...tasks,data])\n    // setTasks([...tasks,{ id: Math.floor(Math.random() * 10000) + 1, day: task.day, reminder: task.reminder, text: task.text }]);\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onToggle={() => setshowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {/* {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={onToggle}/> \n      : 'No Tasks to Show'}  */}\n      <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={onToggle}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          )}\n        />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}